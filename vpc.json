{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Creates VPC as per the 9th chapter of acloud.guru AWS Associate Architect course.",

  "Parameters" : {
    "Ec2KeyPair" : {
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "Description" : "Specify KeyPair that will be used to access the EC2 instances created by this stack. You can create a new key in Services > EC2 > Key Pairs."
    },
    "Ec2AmiGeneralPurpose" : {
      "Type" : "AWS::EC2::Image::Id",
      "Description" : "Specify a general purpose EC2 AMI ID that will be used for the Web Server and MySQL Server.",
      "Default" : "ami-01ccc867"
    },
    "NatType" : {
      "Type" : "String",
      "Description" : "Choose whether to use NAT Gateway (prefered) or NAT Instance.",
      "AllowedValues" : [ "NatGateway", "NatInstance" ],
      "ConstraintDescription" : "NatType must be either NatGateway or NatInstance"
    },
    "Ec2AmiNat" : {
      "Type" : "AWS::EC2::Image::Id",
      "Description" : "Specify a NAT EC2 AMI ID that will be used for the NAT Instance. Ignored if NatType = NatGateway.",
      "Default" : "ami-076d5d61"
    }
  },

  "Conditions" : {
    "CreateNatGateway"  : { "Fn::Equals" : [ { "Ref": "NatType" }, "NatGateway" ] },
    "CreateNatInstance" : { "Fn::Equals" : [ { "Ref": "NatType" }, "NatInstance" ] }
  },

  "Resources" : {
    "VPC" : {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyVPC"
          }
        ]
      }
    },

    "SubnetPublic" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : "eu-west-1a",
        "CidrBlock" : "10.0.1.0/24",
        "MapPublicIpOnLaunch" : true,
        "Tags" : [
          {
            "Key": "Name",
            "Value": "Public SN 10.0.1.0/16 eu-west-1a"
          }
        ],
        "VpcId" : { "Ref": "VPC" }
      }
    },

    "SubnetPrivate" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : "eu-west-1b",
        "CidrBlock" : "10.0.2.0/24",
        "MapPublicIpOnLaunch" : false,
        "Tags" : [
          {
            "Key": "Name",
            "Value": "Private SN 10.0.2.0/16 eu-west-1b"
          }
        ],
        "VpcId" : { "Ref": "VPC" }
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          {
            "Key": "Name",
            "Value": "MyVPC Internet Gateway"
          }
        ]
      }
    },

    "InternetGatewayAttachement" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "InternetGatewayId" : { "Ref": "InternetGateway" },
        "VpcId" : { "Ref": "VPC" }
      }
    },

    "ElasticIPForNatGateway" : {
      "Type" : "AWS::EC2::EIP",
      "Condition" : "CreateNatGateway",
      "DependsOn" : "InternetGatewayAttachement",
      "Properties" : {
        "Domain" : "VPC"
      }
    },

    "NatGateway" : {
      "Type" : "AWS::EC2::NatGateway",
      "Condition" : "CreateNatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : [ "ElasticIPForNatGateway", "AllocationId" ] },
        "SubnetId" : { "Ref": "SubnetPublic" }
      }
    },

    "RouteTablePrivate" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref": "VPC" },
        "Tags" : [
          {
            "Key": "Name",
            "Value": "Private Route"
          }
        ]
      }
    },

    "RoutePrivateNATGateway" : {
      "Type" : "AWS::EC2::Route",
      "Condition" : "CreateNatGateway",
      "Properties" : {
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref": "NatGateway" },
        "RouteTableId" : { "Ref": "RouteTablePrivate" }
      }
    },

    "RoutePrivateNATInstance" : {
      "Type" : "AWS::EC2::Route",
      "Condition" : "CreateNatInstance",
      "DependsOn" : "EC2NatInstance",
      "Properties" : {
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref": "EC2NatInstance" },
        "RouteTableId" : { "Ref": "RouteTablePrivate" }
      }
    },

    "RouteTableAssociationPrivate" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref": "RouteTablePrivate" },
        "SubnetId" : { "Ref": "SubnetPrivate" }
      }
    },

    "RouteTablePublic" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref": "VPC" },
        "Tags" : [
          {
            "Key": "Name",
            "Value": "Public Route"
          }
        ]
      }
    },

    "RoutePublic" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "InternetGatewayAttachement",
      "Properties" : {
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref": "InternetGateway" },
        "RouteTableId" : { "Ref": "RouteTablePublic" }
      }
    },

    "RouteTableAssociationPublic" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref": "RouteTablePublic" },
        "SubnetId" : { "Ref": "SubnetPublic" }
      }
    },

    "SGWebDMZ" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupName" : "Web DMZ Security Group",
        "GroupDescription" : "Security group for Web server, NAT and Bastion hosts; allows incomming ssh and http/https traffic from anywhere",
        "SecurityGroupIngress" : [
          {
            "CidrIp" : "0.0.0.0/0",
            "IpProtocol" : "tcp",
            "FromPort" : 22,
            "ToPort" : 22
          },
          {
            "CidrIp" : "0.0.0.0/0",
            "IpProtocol" : "tcp",
            "FromPort" : 80,
            "ToPort" : 80
          },
          {
            "CidrIp" : "0.0.0.0/0",
            "IpProtocol" : "tcp",
            "FromPort" : 443,
            "ToPort" : 443
          }
        ],
        "Tags" : [
          {
            "Key": "Name",
            "Value": "Web DMZ Security Group"
          }
        ],
        "VpcId" : { "Ref": "VPC" }
      }
    },

    "SGRDS" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupName" : "RDS Security Group",
        "GroupDescription" : "Security group for relational DB servers; allows incoming ssh and mysql traffic from the public subnet only",
        "SecurityGroupIngress" : [
          {
            "CidrIp" : "10.0.1.0/24",
            "IpProtocol" : "tcp",
            "FromPort" : 22,
            "ToPort" : 22
          },
          {
            "CidrIp" : "10.0.1.0/24",
            "IpProtocol" : "tcp",
            "FromPort" : 3306,
            "ToPort" : 3306
          }
        ],
        "Tags" : [
          {
            "Key": "Name",
            "Value": "RDS Security Group"
          }
        ],
        "VpcId" : { "Ref": "VPC" }
      }
    },

    "EC2WebServer" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "InternetGatewayAttachement",
      "Properties" : {
        "AvailabilityZone" : "eu-west-1a",
        "ImageId" : { "Ref": "Ec2AmiGeneralPurpose" },
        "InstanceInitiatedShutdownBehavior" : "stop",
        "InstanceType" : "t2.micro",
        "KeyName" : { "Ref": "Ec2KeyPair" },
        "SecurityGroupIds" : [
          { "Ref": "SGWebDMZ" }
        ],
        "SubnetId" : { "Ref": "SubnetPublic" },
        "Tags" : [
          {
            "Key": "Name",
            "Value": "Web Server"
          }
        ],
        "UserData" : {
          "Fn::Base64" : { "Fn::Join" : [ "", [
            "#!/bin/bash\n",
            "yum install httpd -y\n",
            "yum update -y\n",
            "service httpd start\n",
            "chkconfig httpd on\n",
            "echo \"<html><h1>Hello Cloud Gurus!</h1></html>\" > /var/www/html/index.html\n"
          ] ] }
        }
      }
    },

    "EC2NatInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Condition" : "CreateNatInstance",
      "DependsOn" : "InternetGatewayAttachement",
      "Properties" : {
        "AvailabilityZone" : "eu-west-1a",
        "ImageId" : { "Ref": "Ec2AmiNat" },
        "InstanceInitiatedShutdownBehavior" : "stop",
        "InstanceType" : "t2.micro",
        "KeyName" : { "Ref": "Ec2KeyPair" },
        "SecurityGroupIds" : [
          { "Ref": "SGWebDMZ" }
        ],
        "SourceDestCheck" : false,
        "SubnetId" : { "Ref": "SubnetPublic" },
        "Tags" : [
          {
            "Key": "Name",
            "Value": "NAT Instance"
          }
        ]
      }
    },

    "EC2MySQLServer" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "AvailabilityZone" : "eu-west-1b",
        "ImageId" : { "Ref": "Ec2AmiGeneralPurpose" },
        "InstanceInitiatedShutdownBehavior" : "stop",
        "InstanceType" : "t2.micro",
        "KeyName" : { "Ref": "Ec2KeyPair" },
        "SecurityGroupIds" : [
          { "Ref": "SGRDS" }
        ],
        "SubnetId" : { "Ref": "SubnetPrivate" },
        "Tags" : [
          {
            "Key": "Name",
            "Value": "MySQL Server"
          },
          {
            "Key" : "NatRoute",
            "Value" : {
              "Fn::If" : [
                "CreateNatGateway",
                { "Ref": "RoutePrivateNATGateway" },
                { "Ref": "RoutePrivateNATInstance" }
              ]
            }
          }
        ],
        "UserData" : {
          "Fn::Base64" : { "Fn::Join" : [ "", [
            "#!/bin/bash\n",
            "yum install mysql -y\n",
            "yum update -y\n"
          ] ] }
        }
      }
    }

  },

  "Outputs" : {
    "WebServerPublicIP" : {
      "Description" : "Public IP address of the Web Server; use this to ssh into the box or to view the test web page in a browser",
      "Value" : { "Fn::GetAtt" : [ "EC2WebServer", "PublicIp" ] }
    },

    "WebServerPrivateIP" : {
      "Description" : "Private IP address of the Web Server",
      "Value" : { "Fn::GetAtt" : [ "EC2WebServer", "PrivateIp" ] }
    },

    "NatType" : {
      "Description" : "Type of NAT used, either NatGateway or NatInstance",
      "Value" : { "Ref": "NatType" }
    },

    "NatInstancePublicIP" : {
      "Description" : "Public IP address of the NAT Instance; use this to ssh into the box",
      "Value" : { "Fn::GetAtt" : [ "EC2NatInstance", "PublicIp" ] },
      "Condition" : "CreateNatInstance"
    },

    "NatInstancePrivateIP" : {
      "Description" : "Private IP address of the NAT Instance",
      "Value" : { "Fn::GetAtt" : [ "EC2NatInstance", "PrivateIp" ] },
      "Condition" : "CreateNatInstance"
    },

    "MySQLServerPrivateIP" : {
      "Description" : "Private IP address of the MySQL Server; use this to ssh into the box or to connect to the MySQL server from the Public subnet",
      "Value" : { "Fn::GetAtt" : [ "EC2MySQLServer", "PrivateIp" ] }
    }
  }
}